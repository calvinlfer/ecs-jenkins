{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates a jenkins master service in an existing ECS cluster",

  "Parameters": {
    "ClusterStackName": {
      "Description": "Name of an active CloudFormation stack that contains an ECS cluster",
      "Type": "String",
      "MinLength" : 1,
      "MaxLength" : 255,
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$"
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "Subnets in which load balancer will run"
    },
    "LogGroupName": {
      "Type": "String",
      "Description": "Optional - An existing log group to push jenkins master logs to. Note: If you don't provide this, a log group named jenkins will be created"
    },
    "LogRetention":{
      "Type": "Number",
      "Description": "Number of days to retain logs in CWL",
      "Default": "14"
    }
  },
  "Conditions": {
    "DoNotCreateLogGroup": {
      "Fn::Not": [
        {
        "Fn::Equals": [
          {
            "Ref": "LogGroupName"
          },
          ""
        ]}]
    },
    "CreateLogGroup": {
      "Fn::Equals": [
        {
          "Ref": "LogGroupName"
        },
        ""
      ]
    }
  },
  "Resources" : {
    "ELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Jenkins ELB Security Group",
        "VpcId": {"Fn::ImportValue" : {
          "Fn::Sub": "${ClusterStackName}-VpcId"
        }},
        "SecurityGroupIngress" : [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 50000,
            "ToPort": 50000,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub": "ECS Jenkins ELB SG - ${AWS::StackName}"}
          }
        ]
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": {
          "Ref": "SubnetIds"
        },
        "SecurityGroups": [
          {
            "Ref": "ELBSecurityGroup"
          },
          {
            "Fn::ImportValue": {"Fn::Sub": "${ClusterStackName}-LB-SecurityGroupId"}
          }
        ],
        "Listeners": [
          {
            "InstancePort": "40000",
            "InstanceProtocol": "HTTP",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP"
          },
          {
            "InstancePort": "50000",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "50000",
            "Protocol": "TCP"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "30",
          "Target": "TCP:40000",
          "Timeout": "5",
          "UnhealthyThreshold": "5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub": "ECS Jenkins ELB - ${AWS::StackName}"}
          }
        ]
      }
    },
    "EcsTaskRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "JenkinsMasterPolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "Stmt1452746887373",
                  "Action": [
                    "ecs:RegisterTaskDefinition",
                    "ecs:ListClusters",
                    "ecs:DescribeContainerInstances"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Sid": "Stmt1452746887374",
                  "Action": [
                    "ecs:StopTask",
                    "ecs:ListContainerInstances"
                  ],
                  "Effect": "Allow",
                  "Resource": {"Fn::Join": [
                    "/",
                    [
                      {"Fn::Sub": "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster"},
                      {"Fn::ImportValue": {"Fn::Sub": "${ClusterStackName}-ClusterName"}}
                    ]
                  ]}
                },
                {
                  "Sid": "Stmt1452746887375",
                  "Action": [
                    "ecs:RunTask"
                  ],
                  "Effect": "Allow",
                  "Resource": {"Fn::Sub": "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/jenkins-slave-*"}
                },
                {
                  "Sid": "Stmt1452746887376",
                  "Action": [
                    "ecs:StopTask",
                    "ecs:DescribeTasks"
                  ],
                  "Effect": "Allow",
                  "Resource": {"Fn::Sub": "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task/*"}
                }
              ]
            }
          }
        ]
      }
    },
    "TaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {

        "ContainerDefinitions": [
          {
            "Name": "jenkins",
            "Image": "jenkins",
            "Hostname": "jenkins",
            "Cpu": 512,
            "Memory": 2048,
            "User": "root",
            "Environment": [
              {
                "Name": "JAVA_OPTS",
                "Value": "-Djenkins.install.runSetupWizard=false"
              }
            ],
            "Essential": true,
            "MountPoints": [
              {
                "ContainerPath": "/var/jenkins_home",
                "SourceVolume": "efs-jenkins",
                "ReadOnly": false
              }
            ],
            "PortMappings": [
              {
                "HostPort": 40000,
                "ContainerPort": 8080
              },
              {
                "HostPort": 50000,
                "ContainerPort": 50000
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {"Fn::If": ["CreateLogGroup", {"Ref": "LogGroup"}, {"Ref": "LogGroupName"}]},
                "awslogs-region": {"Ref": "AWS::Region"},
                "awslogs-stream-prefix": "master"
              }
            }
          }
        ],
        "Volumes": [
          {
            "Name": "efs-jenkins",
            "Host": {
              "SourcePath": {"Fn::Join": ["/", [{"Fn::ImportValue": {"Fn::Sub": "${ClusterStackName}-MountPath"}}, "jenkins"]]}
            }
          }
        ],
        "TaskRoleArn": {"Ref": "EcsTaskRole"}
      }
    },
    "Service" : {
      "Type" : "AWS::ECS::Service",
      "Condition": "CreateLogGroup",
      "DependsOn": "LogGroup",
      "Properties" : {
        "Role" : {"Fn::ImportValue": {"Fn::Sub": "${ClusterStackName}-EcsServiceRole"}},
        "TaskDefinition" : { "Ref" : "TaskDefinition" },
        "DesiredCount" : 1,
        "LoadBalancers": [
          {
            "ContainerName": "jenkins",
            "ContainerPort": "8080",
            "LoadBalancerName": {
              "Ref": "LoadBalancer"
            }
          }
        ],
        "Cluster" : {
          "Fn::ImportValue": {"Fn::Sub": "${ClusterStackName}-ClusterName"}
        }
      }
    },
    "ServiceWithExistingLogGroup": {
      "Type" : "AWS::ECS::Service",
      "Condition": "DoNotCreateLogGroup",
      "Properties" : {
        "Role" : {"Fn::ImportValue": {"Fn::Sub": "${ClusterStackName}-EcsServiceRole"}},
        "TaskDefinition" : { "Ref" : "TaskDefinition" },
        "DesiredCount" : 1,
        "LoadBalancers": [
          {
            "ContainerName": "jenkins",
            "ContainerPort": "8080",
            "LoadBalancerName": {
              "Ref": "LoadBalancer"
            }
          }
        ],
        "Cluster" : {
          "Fn::ImportValue": {"Fn::Sub": "${ClusterStackName}-ClusterName"}
        }
      }
    },
    "LogGroup" : {
      "Type": "AWS::Logs::LogGroup",
      "Condition": "CreateLogGroup",
      "Properties": {
        "RetentionInDays": {"Ref": "LogRetention"},
        "LogGroupName": "jenkins"
      },
      "DeletionPolicy": "Retain"
    }
  },
  "Outputs" : {
    "Service" : {
      "Description": "The name of the ECS service created",
      "Value" : {"Fn::If": ["CreateLogGroup",
        { "Fn::GetAtt" : ["Service" , "Name"]},
        { "Fn::GetAtt" : ["ServiceWithExistingLogGroup", "Name"]}]},
      "Export" : {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ServiceName"
        }
      }
    },
    "TaskArn": {
      "Description": "The ARN of the task created for the service",
      "Value": { "Ref" : "TaskDefinition"}
    },
    "LoadBalancerDNS": {
      "Description": "The dns name of the app load balancer for the service",
      "Value": { "Fn::GetAtt": ["LoadBalancer", "DNSName"]},
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-LoadBalancerDNSName"
        }
      }
    },
    "LoadBalancer": {
      "Description": "The ARN of the app load balancer for the service",
      "Value": {"Ref": "LoadBalancer"}
    },
    "LogGroup": {
      "Description": "The name of the log group created/used for the app",
      "Value": {"Fn::If": ["CreateLogGroup", {"Ref": "LogGroup"}, {"Ref": "LogGroupName"}]},
      "Export" : {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-LogGroupName"
        }
      }
    }
  }
}